name: GraphScope Test

on:
  workflow_run:
    workflows: ["Build GraphScope"]
    types:
      - completed

jobs:
  python-test:
    runs-on: ubuntu-20.04
    needs: [build-gae, build-gle]
    defaults:
      run:
        shell: scl enable devtoolset-7 -- bash --noprofile --norc -eo pipefail {0}
    container:
      image: registry.cn-hongkong.aliyuncs.com/graphscope/graphscope-runtime:latest
      options:
        --shm-size 4096m
    strategy:
      matrix:
        experimental: [ON, OFF]
    steps:
    - name: Install Dependencies
      run: |
        yum install -y http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm
        yum install -y git

    - uses: actions/checkout@v2.3.2

    - uses: actions/download-artifact@v2
    - name: Prepare environment
      run: |
        export GS_TEST_DIR='/root/gstest'
        git clone -b master --single-branch --depth=1 https://github.com/7br/gstest.git ${GS_TEST_DIR}
        python3 -m pip install pytest-cov
        tar -xf ./gae-${{ github.sha }}/gae.tar
        tar -xf ./gle-${{ github.sha }}/gle.tar
        cp -R -n opt/graphscope/* /usr/local/
        ls -la /usr/local/bin/
        pushd /usr/local/dist/ && pip3 install ./*.whl && popd
        python3 -m pip install -r python/requirements.txt
        python3 -m pip install -r python/requirements-dev.txt
        pushd python && python3 setup.py build_proto && popd
        pushd coordinator && python3 setup.py build_builtin && popd

    - name: App Test with Expr Off
      if: matrix.experimental == 'OFF'
      run: |
        export GS_TEST_DIR='/root/gstest'
        cd python
        python3 -m pytest --cov=graphscope --cov-config=.coveragerc --cov-report=xml \
                          --cov-report=term --exitfirst -s -v tests

    - name: Upload Coverage
      if: matrix.experimental == 'OFF'
      uses: codecov/codecov-action@v1
      with:
        file: ./python/coverage.xml
        fail_ci_if_error: true

    - name: App Test with Expr On
      if: matrix.experimental == 'ON'
      run: |
        export GS_TEST_DIR='/root/gstest'
        python3 -m pytest --exitfirst -s -v python/graphscope/experimental/nx/tests/classes
        python3 -m pytest --exitfirst -s -v python/graphscope/experimental/nx/tests/test_nx.py
        python3 -m pytest --exitfirst -s -v python/graphscope/experimental/nx/tests/algorithms/builtin \
                                            python/graphscope/experimental/nx/tests/test_utils.py

  k8s-test:
    runs-on: self-hosted
    needs: [build-gae, build-gie, build-gle, build-manager]
    steps:
    - name: Clean up
      run: |
        echo "CI is running on host $(curl -s 'https://api.ipify.org')"
        sudo docker ps --no-trunc -aqf "status=exited" | xargs sudo docker rm || true
        sudo docker images --no-trunc -aqf "dangling=true" | xargs sudo docker rmi -f || true
        sudo rm -rf ./* || true
        find ./ -name "*.egg-info" | xargs sudo rm -rf || true
        find ./ -name "*.whl" | xargs sudo rm -rf || true
        find ./ -name "*_pb2.py" | xargs sudo rm -rf || true
        find ./ -name "*_pb2_grpc.py" | xargs sudo rm -rf || true

    - uses: actions/checkout@v2.3.2

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
          /root/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Prepare Image
      run: |
        cp .github/workflows/*.Dockerfile artifacts/
        pushd artifacts
        tar -xf ./gae-${{ github.sha }}/gae.tar
        tar -xf ./gle-${{ github.sha }}/gle.tar
        tar -xf ./gie-${{ github.sha }}/gie.tar
        tar -xf ./manager-${{ github.sha }}/manager.tar
        sudo docker build -t registry.cn-hongkong.aliyuncs.com/graphscope/graphscope:${{ github.sha }} \
                          --network=host \
                          -f ./graphscope.Dockerfile .
        sudo docker build -t registry.cn-hongkong.aliyuncs.com/graphscope/maxgraph_standalone_manager:1.0 \
                          --network=host \
                          -f ./manager.Dockerfile .
        popd
        sudo python3 -m pip install -r python/requirements.txt
        sudo python3 -m pip install -r python/requirements-dev.txt
        sudo python3 -m pip install pytest-cov
        pushd python && sudo -E python3 setup.py develop && popd

    - name: Kubernetes test
      env:
        CHANGE_MINIKUBE_NONE_USER: true
        GS_IMAGE: registry.cn-hongkong.aliyuncs.com/graphscope/graphscope:${{ github.sha }}
      run: |
        export GS_TEST_DIR=${GITHUB_WORKSPACE}/gstest
        git clone -b master --single-branch --depth=1 https://github.com/7br/gstest.git ${GS_TEST_DIR}
        cd python
        python3 -m pytest --cov=graphscope --cov-config=.coveragerc --cov-report=xml \
                          --cov-report=term --exitfirst -s -vvv --log-cli-level=INFO \
                          ./graphscope/deploy/tests/
    - name: Upload Coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./python/coverage.xml
        fail_ci_if_error: true
    - name: Clean
      run: |
        sudo docker rmi registry.cn-hongkong.aliyuncs.com/graphscope/graphscope:${{ github.sha }} \
                        registry.cn-hongkong.aliyuncs.com/graphscope/maxgraph_standalone_manager:1.0 || true

  gie-test:
    runs-on: self-hosted
    needs: [build-gae, build-gie, build-gle, build-manager]
    steps:
    - name: Clean up
      run: |
        echo "CI is running on host $(curl -s 'https://api.ipify.org')"
        sudo docker ps --no-trunc -aqf "status=exited" | xargs sudo docker rm || true
        sudo docker images --no-trunc -aqf "dangling=true" | xargs sudo docker rmi -f || true
        sudo rm -rf ./* || true
        sudo rm -rf /tmp/graphscope/app_* || true
        find ./ -name "*.egg-info" | xargs sudo rm -rf || true
        find ./ -name "*.whl" | xargs sudo rm -rf || true
        find ./ -name "*_pb2.py" | xargs sudo rm -rf || true
        find ./ -name "*_pb2_grpc.py" | xargs sudo rm -rf || true

    - uses: actions/checkout@v2.3.2

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
          /root/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v2
      with:
        path: artifacts
    - name: Prepare Image
      run: |
        cp .github/workflows/*.Dockerfile artifacts/
        pushd artifacts
        tar -xf ./gae-${{ github.sha }}/gae.tar
        tar -xf ./gle-${{ github.sha }}/gle.tar
        tar -xf ./gie-${{ github.sha }}/gie.tar
        tar -xf ./manager-${{ github.sha }}/manager.tar
        sudo docker build -t registry.cn-hongkong.aliyuncs.com/graphscope/graphscope:${{ github.sha }} \
                          --network=host \
                          -f ./graphscope.Dockerfile .
        sudo docker build -t registry.cn-hongkong.aliyuncs.com/graphscope/maxgraph_standalone_manager:1.0 \
                          --network=host \
                          -f ./manager.Dockerfile .
        popd
        sudo python3 -m pip install -r python/requirements.txt
        sudo python3 -m pip install -r python/requirements-dev.txt
        sudo python3 -m pip install pytest-cov
        pushd python && sudo -E python3 setup.py develop && popd

    - name: Run function test
      run: |
        export PYTHONPATH=${GITHUB_WORKSPACE}/python
        cd interactive_engine/tests
        ./function_test.sh 8111 1 registry.cn-hongkong.aliyuncs.com/graphscope/graphscope:${{ github.sha }}
        ./function_test.sh 8111 2 registry.cn-hongkong.aliyuncs.com/graphscope/graphscope:${{ github.sha }}
    - name: Clean
      run: |
        sudo docker rmi registry.cn-hongkong.aliyuncs.com/graphscope/graphscope:${{ github.sha }} \
                        registry.cn-hongkong.aliyuncs.com/graphscope/maxgraph_standalone_manager:1.0 || true
